// <auto-generated />
using Lab4.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Lab4.Migrations
{
    [DbContext(typeof(CustomerDbContext))]
    [Migration("20220430093208_firstpush")]
    partial class firstpush
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.24")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Lab4.Models.Book", b =>
                {
                    b.Property<int>("BookId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Author")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BookId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Books");

                    b.HasData(
                        new
                        {
                            BookId = 1,
                            Author = "James",
                            CustomerId = 1,
                            Status = "Lent",
                            Title = "An introduction to statistical learning"
                        },
                        new
                        {
                            BookId = 2,
                            Author = "Anders svensson",
                            CustomerId = 1,
                            Status = "Available",
                            Title = "How to flip a burger"
                        },
                        new
                        {
                            BookId = 3,
                            Author = "Olof Parhammar",
                            CustomerId = 2,
                            Status = "Lent",
                            Title = "How to flip köttbullar"
                        },
                        new
                        {
                            BookId = 4,
                            Author = "Reidar Nilssen",
                            CustomerId = 3,
                            Status = "Lent",
                            Title = "How to become a billionare in 30 minutes"
                        },
                        new
                        {
                            BookId = 5,
                            Author = "Bill gates",
                            CustomerId = 3,
                            Status = "Lent",
                            Title = "Learn how to run microsoft in 5 minutes"
                        },
                        new
                        {
                            BookId = 6,
                            Author = "Mark Zuckerberg",
                            CustomerId = 3,
                            Status = "Available",
                            Title = "Learn how to open a door"
                        });
                });

            modelBuilder.Entity("Lab4.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("MobileNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("CustomerId");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            CustomerId = 1,
                            Age = 22,
                            MobileNumber = "12345679",
                            Name = "Martin"
                        },
                        new
                        {
                            CustomerId = 2,
                            Age = 26,
                            MobileNumber = "987654321",
                            Name = "Christopher"
                        },
                        new
                        {
                            CustomerId = 3,
                            Age = 76,
                            MobileNumber = "432156789",
                            Name = "Peter"
                        });
                });

            modelBuilder.Entity("Lab4.Models.Book", b =>
                {
                    b.HasOne("Lab4.Models.Customer", "Customer")
                        .WithMany("books")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
