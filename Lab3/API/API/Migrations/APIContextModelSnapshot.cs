// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace API.Migrations
{
    [DbContext(typeof(APIContext))]
    partial class APIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("API.Models.Intresse", b =>
                {
                    b.Property<int>("IntresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titel")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IntresseId");

                    b.ToTable("Intresse");
                });

            modelBuilder.Entity("API.Models.IntresseLinks", b =>
                {
                    b.Property<int>("IntresseLinksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntresseId")
                        .HasColumnType("int");

                    b.Property<int?>("LinksId")
                        .HasColumnType("int");

                    b.HasKey("IntresseLinksId");

                    b.HasIndex("IntresseId");

                    b.HasIndex("LinksId");

                    b.ToTable("IntresseLinks");
                });

            modelBuilder.Entity("API.Models.Links", b =>
                {
                    b.Property<int>("LinksId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("WebLink")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LinksId");

                    b.ToTable("Links");
                });

            modelBuilder.Entity("API.Models.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Telefonnumber")
                        .HasColumnType("int");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");
                });

            modelBuilder.Entity("API.Models.PersonIntresse", b =>
                {
                    b.Property<int>("PersonIntresseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IntresseId")
                        .HasColumnType("int");

                    b.Property<int>("PersonId")
                        .HasColumnType("int");

                    b.HasKey("PersonIntresseId");

                    b.HasIndex("IntresseId");

                    b.HasIndex("PersonId");

                    b.ToTable("PersonIntresse");
                });

            modelBuilder.Entity("API.Models.IntresseLinks", b =>
                {
                    b.HasOne("API.Models.Intresse", "Intresse")
                        .WithMany("IntresseLinks")
                        .HasForeignKey("IntresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Links", "Links")
                        .WithMany("IntresseLinks")
                        .HasForeignKey("LinksId");
                });

            modelBuilder.Entity("API.Models.PersonIntresse", b =>
                {
                    b.HasOne("API.Models.Intresse", "Intresse")
                        .WithMany("PersonIntresse")
                        .HasForeignKey("IntresseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Models.Person", "person")
                        .WithMany("PersonIntresse")
                        .HasForeignKey("PersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
